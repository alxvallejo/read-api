name: Deploy Read API (Production)

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install production dependencies
        run: npm install --production

      - name: Create deployment package
        run: |
          set -e
          rm -rf package
          mkdir -p package
          # Stage source files excluding VCS/CI metadata
          rsync -a --delete \
            --exclude ".git" \
            --exclude ".github" \
            --exclude "read-api.tar.gz" \
            --exclude "package" \
            ./ package/
          # Include installed production node_modules
          rsync -a node_modules/ package/node_modules/
          # Create archive from staged folder to avoid tar reading the output file
          tar -C package -czf read-api.tar.gz .

      - name: Copy package to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "read-api.tar.gz"
          target: "/tmp"

      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            if [ ! -d "/var/www/read-api" ]; then
              echo "Preparing /var/www/read-api..."
              if sudo -n true 2>/dev/null; then
                sudo mkdir -p /var/www/read-api
                sudo chown $USER:$USER /var/www/read-api
              else
                echo "Create it manually: sudo mkdir -p /var/www/read-api && sudo chown $USER:$USER /var/www/read-api"
                exit 1
              fi
            fi
            # If we have sudo, ensure user owns the directory to avoid permission issues
            if sudo -n true 2>/dev/null; then
              sudo chown -R $USER:$USER /var/www/read-api
            fi
            # Extract without trying to preserve owner/perms/mtime to avoid utime/mode errors
            tar -xzf /tmp/read-api.tar.gz -C /var/www/read-api --no-same-owner --no-same-permissions -m || true
            rm -f /tmp/read-api.tar.gz
            cd /var/www/read-api
            PM2="/var/www/read-api/node_modules/.bin/pm2"
            if [ ! -x "$PM2" ]; then
              echo "Project-local pm2 not found at $PM2. Ensure CI packaged node_modules."
              exit 1
            fi
            if "$PM2" list | grep -q "read-api"; then
              "$PM2" restart read-api --update-env
            else
              "$PM2" start server.js --name read-api -i 2
            fi
            "$PM2" save
            echo "Deployment complete."
