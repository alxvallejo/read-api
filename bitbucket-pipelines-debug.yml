image: node:18

definitions:
  services:
    docker:
      memory: 2048

pipelines:
  default:
    - step:
        name: Build and Test
        script:
          - node --version
          - npm --version
          - npm ci
          - echo "✅ Dependencies installed successfully!"

  branches:
    master:
      - step:
          name: Deploy to Production (Debug Version)
          deployment: production
          script:
            # Install dependencies locally
            - npm ci
            
            # Deploy to server with detailed debugging
            - pipe: atlassian/ssh-run:0.4.1
              variables:
                SSH_USER: 'alxvallejo'
                SERVER: 'seojeek.com'
                MODE: 'script'
                DEBUG: 'true'
                COMMAND: |
                  #!/bin/bash
                  set -x  # Enable debug output
                  set -e  # Exit on any error
                  
                  echo "=== Starting deployment ==="
                  echo "Current user: $(whoami)"
                  echo "Current directory: $(pwd)"
                  
                  echo "=== Checking if directory exists ==="
                  if [ -d "/var/www/read-api" ]; then
                    echo "✓ Directory exists"
                    ls -la /var/www/read-api | head -5
                  else
                    echo "✗ Directory does not exist"
                    echo "Creating directory..."
                    sudo mkdir -p /var/www/read-api || echo "Failed to create directory"
                    sudo chown alxvallejo:alxvallejo /var/www/read-api || echo "Failed to set ownership"
                  fi
                  
                  echo "=== Navigating to directory ==="
                  cd /var/www/read-api || { echo "Failed to cd to /var/www/read-api"; exit 1; }
                  
                  echo "=== Checking git repository ==="
                  if [ -d ".git" ]; then
                    echo "✓ Git repository exists"
                    git remote -v
                  else
                    echo "✗ Not a git repository"
                    echo "Cloning repository..."
                    cd /var/www
                    git clone git@bitbucket.org:alxvallejo/read-api.git || { echo "Git clone failed"; exit 1; }
                    cd read-api
                  fi
                  
                  echo "=== Pulling latest changes ==="
                  git pull origin master || { echo "Git pull failed"; exit 1; }
                  
                  echo "=== Checking Node.js ==="
                  which node || { echo "Node.js not found"; exit 1; }
                  node --version
                  npm --version
                  
                  echo "=== Installing dependencies ==="
                  npm ci --production || { echo "npm ci failed"; exit 1; }
                  
                  echo "=== Checking PM2 ==="
                  if command -v pm2 &> /dev/null; then
                    echo "✓ PM2 is installed"
                    pm2 --version
                    
                    echo "=== Managing PM2 process ==="
                    pm2 list
                    
                    if pm2 list | grep -q "read-api"; then
                      echo "Restarting existing process..."
                      pm2 restart read-api --update-env
                    else
                      echo "Starting new process..."
                      pm2 start server.js --name read-api -i 2
                    fi
                    
                    pm2 save
                  else
                    echo "✗ PM2 not installed"
                    echo "Installing PM2..."
                    sudo npm install -g pm2 || echo "PM2 installation failed"
                    
                    echo "Starting with PM2..."
                    pm2 start server.js --name read-api -i 2 || echo "PM2 start failed"
                    pm2 save || echo "PM2 save failed"
                  fi
                  
                  echo "=== Testing API ==="
                  sleep 3
                  curl -s -o /dev/null -w "HTTP Status: %{http_code}\n" http://localhost:3000/ || echo "API test failed"
                  
                  echo "=== Deployment complete ==="

    develop:
      - step:
          name: Deploy to Staging
          deployment: staging
          script:
            - npm ci
            - echo "✅ Build successful for staging!"