image: node:18

pipelines:
  default:
    - step:
        name: Build and Test
        script:
          - node --version
          - npm --version
          - npm ci
          - echo "âœ… Dependencies installed successfully!"

  branches:
    master:
      - step:
          name: Deploy to Production
          deployment: production
          script:
            # Install dependencies locally
            - npm ci
            
            # Install SSH client
            - apt-get update && apt-get install -y openssh-client
            
            # Configure SSH
            - mkdir -p ~/.ssh
            - echo "Host seojeek.com" >> ~/.ssh/config
            - echo "  StrictHostKeyChecking no" >> ~/.ssh/config
            - echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config
            - chmod 600 ~/.ssh/config
            
            # Deploy using direct SSH commands
            - echo "ðŸš€ Starting deployment..."
            
            # Check and create directory if needed
            - |
              ssh alxvallejo@seojeek.com << 'ENDSSH'
              echo "ðŸ“¦ Preparing deployment environment..."
              
              # Create directory if it doesn't exist
              if [ ! -d "/var/www/read-api" ]; then
                echo "Creating /var/www/read-api directory..."
                sudo mkdir -p /var/www/read-api
                sudo chown alxvallejo:alxvallejo /var/www/read-api
              fi
              
              # Clone repository if not present
              if [ ! -d "/var/www/read-api/.git" ]; then
                echo "Cloning repository..."
                cd /var/www
                git clone git@bitbucket.org:alxvallejo/read-api.git
              fi
              
              # Navigate to directory
              cd /var/www/read-api
              
              # Pull latest changes
              echo "ðŸ“¥ Pulling latest changes..."
              git pull origin master
              
              # Install dependencies
              echo "ðŸ“¦ Installing dependencies..."
              npm ci --production
              
              # Check if PM2 is installed
              if ! command -v pm2 &> /dev/null; then
                echo "Installing PM2..."
                sudo npm install -g pm2
              fi
              
              # Start or restart the application
              echo "ðŸ”„ Starting/restarting application..."
              if pm2 list | grep -q "read-api"; then
                pm2 restart read-api --update-env
              else
                pm2 start server.js --name read-api -i 2
              fi
              
              # Save PM2 configuration
              pm2 save
              
              # Test the API
              echo "âœ… Testing API..."
              sleep 3
              curl -s -o /dev/null -w "HTTP Status: %{http_code}\n" http://localhost:3000/
              
              echo "ðŸŽ‰ Deployment complete!"
              ENDSSH
            
            - echo "âœ… Pipeline complete!"

    develop:
      - step:
          name: Deploy to Staging
          deployment: staging
          script:
            - npm ci
            - echo "âœ… Build successful for staging!"